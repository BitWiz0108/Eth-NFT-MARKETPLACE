/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "MarketItemSold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingCommision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266470de4df82000060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d38806100746000396000f3fe6080604052600436106100705760003560e01c8063629cb2e41161004e578063629cb2e4146100f95780636a8b52ae14610124578063c23b139e1461014f578063f16d376c1461016b57610070565b8063236dd8de14610075578063576f7ea7146100a057806358eb2df5146100dd575b600080fd5b34801561008157600080fd5b5061008a610196565b60405161009791906115de565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c29190611631565b6104de565b6040516100d491906116ec565b60405180910390f35b6100f760048036038101906100f29190611733565b6106b7565b005b34801561010557600080fd5b5061010e610a1e565b60405161011b91906115de565b60405180910390f35b34801561013057600080fd5b50610139610d66565b6040516101469190611795565b60405180910390f35b610169600480360381019061016491906117b0565b610d70565b005b34801561017757600080fd5b506101806110a1565b60405161018d91906115de565b60405180910390f35b606060006101a46001611366565b905060008060005b8381101561024d573373ffffffffffffffffffffffffffffffffffffffff16600560006001846101dc919061181f565b815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561023a57600183610237919061181f565b92505b808061024590611875565b9150506101ac565b5060008267ffffffffffffffff81111561026a576102696118be565b5b6040519080825280602002602001820160405280156102a357816020015b61029061138a565b8152602001906001900390816102885790505b50905060005b848110156104d3573373ffffffffffffffffffffffffffffffffffffffff16600560006001846102d9919061181f565b815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104c0576000600182610336919061181f565b9050600560008281526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508385815181106104a4576104a36118ed565b5b60200260200101819052506001846104bc919061181f565b9350505b80806104cb90611875565b9150506102a9565b508094505050505090565b6104e661138a565b60006104f26001611366565b90506104fc61138a565b60005b828110156106ac578460056000600184610519919061181f565b81526020019081526020016000206000015414156106995760056000600183610542919061181f565b81526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505091505b80806106a490611875565b9150506104ff565b508092505050919050565b600260005414156106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490611979565b60405180910390fd5b60026000819055506004543414610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090611a0b565b60405180910390fd5b66b1a2bc2ec500008111610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078990611a9d565b60405180910390fd5b61079c6001611374565b60006107a86001611366565b90506040518060e001604052808281526020018481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152506005600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161098993929190611acc565b600060405180830381600087803b1580156109a357600080fd5b505af11580156109b7573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1683827f9647d2e9a23c1809a0461ae22d7688427bce1e7e0b92d0cb92b0e7f4dd72dd9c85336000604051610a0893929190611b03565b60405180910390a4506001600081905550505050565b60606000610a2c6001611366565b905060008060005b83811015610ad5573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610a64919061181f565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ac257600183610abf919061181f565b92505b8080610acd90611875565b915050610a34565b5060008267ffffffffffffffff811115610af257610af16118be565b5b604051908082528060200260200182016040528015610b2b57816020015b610b1861138a565b815260200190600190039081610b105790505b50905060005b84811015610d5b573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610b61919061181f565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d48576000600182610bbe919061181f565b9050600560008281526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838581518110610d2c57610d2b6118ed565b5b6020026020010181905250600184610d44919061181f565b9350505b8080610d5390611875565b915050610b31565b508094505050505090565b6000600454905090565b60026000541415610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad90611979565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020905080600201543414610e1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1290611bac565b60405180910390fd5b81816000015414610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5890611c18565b60405180910390fd5b8060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610ecb573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff166342842e0e303384600101546040518463ffffffff1660e01b8152600401610f0d93929190611acc565b600060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b5050505060018160030160006101000a81548160ff021916908315150217905550338160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fa96002611374565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015611013573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff168160010154837f6dc41992b780d5ec805822abe657d7c8b88c58e424648da63c46ac05499d850b84600201548560030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff163360405161108c93929190611c97565b60405180910390a45060016000819055505050565b606060006110af6002611366565b6110b96001611366565b6110c39190611cce565b905060008167ffffffffffffffff8111156110e1576110e06118be565b5b60405190808252806020026020018201604052801561111a57816020015b61110761138a565b8152602001906001900390816110ff5790505b5090506000805b8381101561135c57600073ffffffffffffffffffffffffffffffffffffffff1660056000600184611152919061181f565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156113495760056000600560006001856111b5919061181f565b81526020019081526020016000206000015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505083838151811061132e5761132d6118ed565b5b6020026020010181905250600182611346919061181f565b91505b808061135490611875565b915050611121565b5081935050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e00160405280600081526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61144a81611437565b82525050565b60008115159050919050565b61146581611450565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114968261146b565b9050919050565b6114a68161148b565b82525050565b60006114b78261146b565b9050919050565b6114c7816114ac565b82525050565b60e0820160008201516114e36000850182611441565b5060208201516114f66020850182611441565b5060408201516115096040850182611441565b50606082015161151c606085018261145c565b50608082015161152f608085018261149d565b5060a082015161154260a085018261149d565b5060c082015161155560c08501826114be565b50505050565b600061156783836114cd565b60e08301905092915050565b6000602082019050919050565b600061158b8261140b565b6115958185611416565b93506115a083611427565b8060005b838110156115d15781516115b8888261155b565b97506115c383611573565b9250506001810190506115a4565b5085935050505092915050565b600060208201905081810360008301526115f88184611580565b905092915050565b600080fd5b61160e81611437565b811461161957600080fd5b50565b60008135905061162b81611605565b92915050565b60006020828403121561164757611646611600565b5b60006116558482850161161c565b91505092915050565b60e0820160008201516116746000850182611441565b5060208201516116876020850182611441565b50604082015161169a6040850182611441565b5060608201516116ad606085018261145c565b5060808201516116c0608085018261149d565b5060a08201516116d360a085018261149d565b5060c08201516116e660c08501826114be565b50505050565b600060e082019050611701600083018461165e565b92915050565b611710816114ac565b811461171b57600080fd5b50565b60008135905061172d81611707565b92915050565b60008060006060848603121561174c5761174b611600565b5b600061175a8682870161171e565b935050602061176b8682870161161c565b925050604061177c8682870161161c565b9150509250925092565b61178f81611437565b82525050565b60006020820190506117aa6000830184611786565b92915050565b600080604083850312156117c7576117c6611600565b5b60006117d58582860161171e565b92505060206117e68582860161161c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061182a82611437565b915061183583611437565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561186a576118696117f0565b5b828201905092915050565b600061188082611437565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118b3576118b26117f0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611963601f8361191c565b915061196e8261192d565b602082019050919050565b6000602082019050818103600083015261199281611956565b9050919050565b7f4c697374696e6720636f6d6d6973696f6e20697320696e73756666696369656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b60006119f560218361191c565b9150611a0082611999565b604082019050919050565b60006020820190508181036000830152611a24816119e8565b9050919050565b7f4c697374696e672070726963652073686f756c64206265206174206c6561737460008201527f20302e3035204554480000000000000000000000000000000000000000000000602082015250565b6000611a8760298361191c565b9150611a9282611a2b565b604082019050919050565b60006020820190508181036000830152611ab681611a7a565b9050919050565b611ac6816114ac565b82525050565b6000606082019050611ae16000830186611abd565b611aee6020830185611abd565b611afb6040830184611786565b949350505050565b6000606082019050611b186000830186611786565b611b256020830185611abd565b611b326040830184611abd565b949350505050565b7f50726963652073686f756c6420626520657175616c20746f206974656d20707260008201527f6963650000000000000000000000000000000000000000000000000000000000602082015250565b6000611b9660238361191c565b9150611ba182611b3a565b604082019050919050565b60006020820190508181036000830152611bc581611b89565b9050919050565b7f54686973206974656d20646f6573206e6f742065786973740000000000000000600082015250565b6000611c0260188361191c565b9150611c0d82611bcc565b602082019050919050565b60006020820190508181036000830152611c3181611bf5565b9050919050565b6000819050919050565b6000611c5d611c58611c538461146b565b611c38565b61146b565b9050919050565b6000611c6f82611c42565b9050919050565b6000611c8182611c64565b9050919050565b611c9181611c76565b82525050565b6000606082019050611cac6000830186611786565b611cb96020830185611c88565b611cc66040830184611abd565b949350505050565b6000611cd982611437565b9150611ce483611437565b925082821015611cf757611cf66117f0565b5b82820390509291505056fea2646970667358221220800738b47a9b77bed3d7530bada3565dc32e33def60cca45b8a98c65bd2f1e6464736f6c63430008090033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
