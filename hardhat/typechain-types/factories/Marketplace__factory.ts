/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "MarketItemSold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingCommision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266470de4df82000060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611855806100746000396000f3fe6080604052600436106100555760003560e01c806358eb2df51461005a578063629cb2e4146100765780636a8b52ae146100a1578063c23b139e146100cc578063f16d376c146100e8578063fdc5ab8e14610113575b600080fd5b610074600480360381019061006f9190611097565b61013e565b005b34801561008257600080fd5b5061008b6104a5565b6040516100989190611281565b60405180910390f35b3480156100ad57600080fd5b506100b66106ff565b6040516100c391906112b2565b60405180910390f35b6100e660048036038101906100e191906112cd565b610709565b005b3480156100f457600080fd5b506100fd610a3a565b60405161010a9190611281565b60405180910390f35b34801561011f57600080fd5b50610128610cff565b6040516101359190611281565b60405180910390f35b60026000541415610184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017b9061136a565b60405180910390fd5b600260008190555060045434146101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c7906113fc565b60405180910390fd5b66b1a2bc2ec500008111610219576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102109061148e565b60405180910390fd5b6102236001610f59565b600061022f6001610f6f565b90506040518060e001604052808281526020018481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152506005600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610410939291906114bd565b600060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1683827f9647d2e9a23c1809a0461ae22d7688427bce1e7e0b92d0cb92b0e7f4dd72dd9c8533600060405161048f939291906114f4565b60405180910390a4506001600081905550505050565b606060006104b36001610f6f565b905060606000805b838110156106f5573373ffffffffffffffffffffffffffffffffffffffff16600560006001846104eb919061155a565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106e257600560006005600060018561054e919061155a565b81526020019081526020016000206000015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508383815181106106c7576106c66115b0565b5b60200260200101819052506001826106df919061155a565b91505b80806106ed906115df565b9150506104bb565b5081935050505090565b6000600454905090565b6002600054141561074f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107469061136a565b60405180910390fd5b60026000819055506000600560008381526020019081526020016000209050806002015434146107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab9061169a565b60405180910390fd5b818160000154146107fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f190611706565b60405180910390fd5b8060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610864573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff166342842e0e303384600101546040518463ffffffff1660e01b81526004016108a6939291906114bd565b600060405180830381600087803b1580156108c057600080fd5b505af11580156108d4573d6000803e3d6000fd5b5050505060018160030160006101000a81548160ff021916908315150217905550338160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109426002610f59565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156109ac573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff168160010154837f6dc41992b780d5ec805822abe657d7c8b88c58e424648da63c46ac05499d850b84600201548560030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633604051610a2593929190611785565b60405180910390a45060016000819055505050565b60606000610a486002610f6f565b610a526001610f6f565b610a5c91906117bc565b905060008167ffffffffffffffff811115610a7a57610a796117f0565b5b604051908082528060200260200182016040528015610ab357816020015b610aa0610f7d565b815260200190600190039081610a985790505b5090506000805b83811015610cf557600073ffffffffffffffffffffffffffffffffffffffff1660056000600184610aeb919061155a565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ce2576005600060056000600185610b4e919061155a565b81526020019081526020016000206000015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110610cc757610cc66115b0565b5b6020026020010181905250600182610cdf919061155a565b91505b8080610ced906115df565b915050610aba565b5081935050505090565b60606000610d0d6001610f6f565b905060606000805b83811015610f4f573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610d45919061155a565b815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f3c576005600060056000600185610da8919061155a565b81526020019081526020016000206000015481526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110610f2157610f206115b0565b5b6020026020010181905250600182610f39919061155a565b91505b8080610f47906115df565b915050610d15565b5081935050505090565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060e00160405280600081526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102e82611003565b9050919050565b61103e81611023565b811461104957600080fd5b50565b60008135905061105b81611035565b92915050565b6000819050919050565b61107481611061565b811461107f57600080fd5b50565b6000813590506110918161106b565b92915050565b6000806000606084860312156110b0576110af610ffe565b5b60006110be8682870161104c565b93505060206110cf86828701611082565b92505060406110e086828701611082565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61111f81611061565b82525050565b60008115159050919050565b61113a81611125565b82525050565b600061114b82611003565b9050919050565b61115b81611140565b82525050565b61116a81611023565b82525050565b60e0820160008201516111866000850182611116565b5060208201516111996020850182611116565b5060408201516111ac6040850182611116565b5060608201516111bf6060850182611131565b5060808201516111d26080850182611152565b5060a08201516111e560a0850182611152565b5060c08201516111f860c0850182611161565b50505050565b600061120a8383611170565b60e08301905092915050565b6000602082019050919050565b600061122e826110ea565b61123881856110f5565b935061124383611106565b8060005b8381101561127457815161125b88826111fe565b975061126683611216565b925050600181019050611247565b5085935050505092915050565b6000602082019050818103600083015261129b8184611223565b905092915050565b6112ac81611061565b82525050565b60006020820190506112c760008301846112a3565b92915050565b600080604083850312156112e4576112e3610ffe565b5b60006112f28582860161104c565b925050602061130385828601611082565b9150509250929050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611354601f8361130d565b915061135f8261131e565b602082019050919050565b6000602082019050818103600083015261138381611347565b9050919050565b7f4c697374696e6720636f6d6d6973696f6e20697320696e73756666696369656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b60006113e660218361130d565b91506113f18261138a565b604082019050919050565b60006020820190508181036000830152611415816113d9565b9050919050565b7f4c697374696e672070726963652073686f756c64206265206174206c6561737460008201527f20302e3035204554480000000000000000000000000000000000000000000000602082015250565b600061147860298361130d565b91506114838261141c565b604082019050919050565b600060208201905081810360008301526114a78161146b565b9050919050565b6114b781611023565b82525050565b60006060820190506114d260008301866114ae565b6114df60208301856114ae565b6114ec60408301846112a3565b949350505050565b600060608201905061150960008301866112a3565b61151660208301856114ae565b61152360408301846114ae565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061156582611061565b915061157083611061565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115a5576115a461152b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006115ea82611061565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561161d5761161c61152b565b5b600182019050919050565b7f50726963652073686f756c6420626520657175616c20746f206974656d20707260008201527f6963650000000000000000000000000000000000000000000000000000000000602082015250565b600061168460238361130d565b915061168f82611628565b604082019050919050565b600060208201905081810360008301526116b381611677565b9050919050565b7f54686973206974656d20646f6573206e6f742065786973740000000000000000600082015250565b60006116f060188361130d565b91506116fb826116ba565b602082019050919050565b6000602082019050818103600083015261171f816116e3565b9050919050565b6000819050919050565b600061174b61174661174184611003565b611726565b611003565b9050919050565b600061175d82611730565b9050919050565b600061176f82611752565b9050919050565b61177f81611764565b82525050565b600060608201905061179a60008301866112a3565b6117a76020830185611776565b6117b460408301846114ae565b949350505050565b60006117c782611061565b91506117d283611061565b9250828210156117e5576117e461152b565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212204df4632b8a1798864a61ed6850c1ad1feb97cffdf1997004a5ec9eff300d75b764736f6c63430008090033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
